#!/usr/bin/env bash

usage() {
	cat <<EOF
usage: $(basename "$0") [-s] <fswatch arg>... -- <command...>

<command...> may include {} for the file that was changed (UNLESS you
use --one-per-batch).

 -s                    Run command once at start, before starting fswatch
                       (command better not include {} in this case)

Selected fswatch args:

 path...               Paths to watch.
 -a, --access          Watch file accesses.
 -d, --directories     Watch directories only.
 -e, --exclude=REGEX   Exclude paths matching REGEX.
 -E, --extended        Use extended regular expressions.
 -i, --include=REGEX   Include paths matching REGEX.
 -I, --insensitive     Use case insensitive regular expressions.
 -L, --follow-links    Follow symbolic links.
 -o, --one-per-batch   Print a single message with the number of change events.
 -r, --recursive       Recurse subdirectories.
EOF
}

run_command_initially=0
fswatch_args=()
while [ $# -gt 0 ]; do
	if [ "$1" = '--' ]; then
		break
	elif [[ "$1" = '-h' || "$1" = '--help' ]]; then
		usage
		exit 0
	elif [[ "$1" = '-s' ]]; then
		run_command_initially=1
		shift 1
	fi
	fswatch_args+=("$1")
	shift 1
done

if [ $# -eq 0 ]; then
	usage
	exit 1
fi

if [ ${#fswatch_args[@]} -le 0 ]; then
	echo 'no arguments given for fswatch' >&2
	exit 1
fi

# Shift away the --
if ! shift 1 || [ $# -le 0 ]; then
	echo 'no command to run given' >&2
	exit 1
fi

if [ $run_command_initially = 1 ]; then
	"$@"
fi
fswatch -0 "${fswatch_args[@]}" | xargs -0 -n 1 -I {} -- "$@"
