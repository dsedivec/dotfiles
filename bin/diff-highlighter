#!/usr/bin/env bash

set -uo pipefail

die() {
	echo "$*" >&2
	exit 1
}

my_name=$(basename "$0")
[[ $# -eq 0 ]] || die "error: $my_name takes no arguments"

if command -v diff-so-fancy >/dev/null 2>&1; then
	exec diff-so-fancy || die "$my_name failed to exec diff-so-fancy"
fi

if command -v diff-highlight >/dev/null 2>&1; then
	if [[ "$(basename "$0")" = "diff-highlight" ]]; then
		die "$my_name: don't name this script diff-highlight!"
		# because we might end up infinitely re-execing ourself over
		# and over, and there's no realpath(3) in Bash.
	fi
	exec diff-highlight || die "$my_name: failed to exec diff-highlight"
fi

for contrib_dir in /opt/local/share/git/contrib/diff-highlight; do
	diff_highlight="$contrib_dir/diff-highlight"
	if [[ -x "$diff_highlight" ]]; then
		exec "$diff_highlight" || die "$my_name: failed to exec $diff_highlight"
	fi
	# https://github.com/git/git/commit/0c977dbc8180892af42d7ab9235fd3e51d6c4078
	diff_highlight="$contrib_dir/diff-highlight.perl"
	if [[ -f "$diff_highlight" ]]; then
		export PERL5LIB="$contrib_dir:${PERL5LIB:-}"
		exec perl -MDiffHighlight "$diff_highlight" \
			|| die "$my_name: failed to exec perl $diff_highlight"
	fi
done

exec cat || die "$my_name: failed to exec cat (WTF)"
